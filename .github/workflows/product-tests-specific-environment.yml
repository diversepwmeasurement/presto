env:
  CONTINUOUS_INTEGRATION: true
  MAVEN_FAST_INSTALL: -B -V --quiet -T 1C -DskipTests -Dair.check.skip-all --no-transfer-progress
    -Dmaven.javadoc.skip=true
  MAVEN_INSTALL_OPTS: -Xmx2G -XX:+ExitOnOutOfMemoryError
  MAVEN_OPTS: -Xmx1024M -XX:+ExitOnOutOfMemoryError
  RETRY: .github/bin/retry
jobs:
  changes:
    outputs:
      codechange: ${{ steps.filter.outputs.codechange }}
    permissions:
      pull-requests: read
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@v2
      with:
        filters: "codechange:\n  - '!presto-docs/**'\n"
  product-tests-specific-environment1:
    concurrency:
      cancel-in-progress: true
      group: ${{ github.workflow }}-product-tests-specific-environment1-${{ github.event.pull_request.number
        }}
    if: needs.changes.outputs.codechange == 'true'
    needs: changes
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Free Disk Space
      run: 'df -h

        sudo apt-get clean

        rm -rf /opt/hostedtoolcache

        df -h

        '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        show-progress: false
    - continue-on-error: true
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      id: cache-maven
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-2-

          '
    - continue-on-error: true
      if: steps.cache-maven.outputs.cache-hit != 'true'
      name: Populate maven cache
      run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies --no-transfer-progress
        && .github/bin/download_nodejs
    - continue-on-error: true
      name: Maven install
      run: 'export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"

        ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl ''!presto-docs,!presto-spark-package,!presto-spark-launcher,!presto-spark-testing,!presto-test-coverage''

        '
    - continue-on-error: true
      name: Product Tests Specific 1.1
      run: presto-product-tests/bin/run_on_docker.sh singlenode -g hdfs_no_impersonation,avro
    - continue-on-error: true
      name: Product Tests Specific 1.2
      run: presto-product-tests/bin/run_on_docker.sh singlenode-kerberos-hdfs-no-impersonation
        -g hdfs_no_impersonation
    - continue-on-error: true
      name: Product Tests Specific 1.4
      run: presto-product-tests/bin/run_on_docker.sh singlenode-kerberos-hdfs-impersonation
        -g storage_formats,cli,hdfs_impersonation,authorization,hive_file_header
    - continue-on-error: true
      name: Product Tests Specific 1.5
      run: presto-product-tests/bin/run_on_docker.sh singlenode-kerberos-hdfs-impersonation-cross-realm
        -g storage_formats,cli,hdfs_impersonation
    - continue-on-error: true
      name: Product Tests Specific 1.6
      run: presto-product-tests/bin/run_on_docker.sh multinode-tls-kerberos -g cli,group-by,join,tls
    timeout-minutes: 60
  product-tests-specific-environment2:
    concurrency:
      cancel-in-progress: true
      group: ${{ github.workflow }}-product-tests-specific-environment2-${{ github.event.pull_request.number
        }}
    if: needs.changes.outputs.codechange == 'true'
    needs: changes
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Free Disk Space
      run: 'df -h

        sudo apt-get clean

        rm -rf /opt/hostedtoolcache

        df -h

        '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        show-progress: false
    - continue-on-error: true
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      id: cache-maven
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-2-

          '
    - continue-on-error: true
      if: steps.cache-maven.outputs.cache-hit != 'true'
      name: Populate maven cache
      run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies &&
        .github/bin/download_nodejs
    - continue-on-error: true
      name: Maven install
      run: 'export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"

        ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl ''!presto-docs,!presto-spark-package,!presto-spark-launcher,!presto-spark-testing,!presto-test-coverage''

        '
    - continue-on-error: true
      name: Product Tests Specific 2.1
      run: presto-product-tests/bin/run_on_docker.sh singlenode-ldap -g ldap -x simba_jdbc
    - continue-on-error: true
      name: Product Tests Specific 2.2
      run: presto-product-tests/bin/run_on_docker.sh multinode-tls -g smoke,cli,group-by,join,tls
    - continue-on-error: true
      name: Product Tests Specific 2.3
      run: presto-product-tests/bin/run_on_docker.sh singlenode-mysql -g mysql_connector,mysql
    - continue-on-error: true
      name: Product Tests Specific 2.4
      run: presto-product-tests/bin/run_on_docker.sh singlenode-postgresql -g postgresql_connector
    - continue-on-error: true
      name: Product Tests Specific 2.5
      run: presto-product-tests/bin/run_on_docker.sh singlenode-cassandra -g cassandra
    - continue-on-error: true
      name: Product Tests Specific 2.7
      run: presto-product-tests/bin/run_on_docker.sh singlenode-kafka -g kafka
    - continue-on-error: true
      name: Product Tests Specific 2.8
      run: presto-product-tests/bin/run_on_docker.sh singlenode-sqlserver -g sqlserver
    timeout-minutes: 60
name: ci
on:
  repository_dispatch:
    types: trigger-ga___product-tests-specific-environment.yml
